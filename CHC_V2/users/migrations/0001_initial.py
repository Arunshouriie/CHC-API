# Generated by Django 4.1.7 on 2024-05-28 10:44

import datetime
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlarmAudit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_audit_id', models.IntegerField()),
                ('alarm_number', models.IntegerField(default=-1)),
                ('sent_time', models.IntegerField(default=-1)),
                ('actual_time', models.IntegerField(default=-1)),
            ],
            options={
                'verbose_name': 'Alarm_Audit',
                'verbose_name_plural': 'Audits_Alarm',
            },
        ),
        migrations.CreateModel(
            name='Dispense_Log',
            fields=[
                ('dispense_id', models.AutoField(primary_key=True, serialize=False)),
                ('taken_on_time', models.BooleanField()),
                ('dispense_time', models.DateTimeField(default=datetime.datetime.now)),
                ('video_review', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('reason_not_taken', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'medicine_dispense',
                'verbose_name_plural': 'medicines',
            },
        ),
        migrations.CreateModel(
            name='DispenseInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_id', models.IntegerField(default=-1)),
                ('dispense_time', models.DateTimeField(default=datetime.datetime.now)),
                ('alarms_start_time', models.DateTimeField(default=datetime.datetime.now)),
                ('alarms_end_time', models.DateTimeField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Dispense',
                'verbose_name_plural': 'Dispense',
            },
        ),
        migrations.CreateModel(
            name='Medicines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ReminderSchedule_audit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dispense_id', models.IntegerField(default=-1)),
                ('dispense_consumed', models.BooleanField(default=False)),
                ('date_of_alarms', models.DateTimeField(default=datetime.datetime.now)),
                ('alarm_count', models.IntegerField(default=-1)),
            ],
            options={
                'verbose_name': 'Reminder_Audit_schedule',
                'verbose_name_plural': 'Reminder_Audits',
            },
        ),
        migrations.CreateModel(
            name='Reminderschedulegroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_in_mins', models.IntegerField(default=-1)),
                ('recurring', models.IntegerField(default=-1)),
                ('No_of_alarms_before_dispense', models.IntegerField(default=-1)),
                ('No_of_alarms_after_dispense', models.IntegerField(default=-1)),
                ('time_range_between_alarms', models.CharField(max_length=50)),
                ('text', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Reminder_schedule',
                'verbose_name_plural': 'Reminders',
            },
        ),
        migrations.CreateModel(
            name='Trackerdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Broacasting_type', models.CharField(blank=True, max_length=25, null=True)),
                ('Header_ID', models.CharField(blank=True, max_length=25, null=True)),
                ('Blood_oxygen', models.CharField(blank=True, max_length=25, null=True)),
                ('Stress_level', models.CharField(blank=True, max_length=25, null=True)),
                ('RRI_HRV', models.CharField(blank=True, max_length=25, null=True)),
                ('Activity_Intensity', models.CharField(blank=True, max_length=25, null=True)),
                ('Blood_pressure_SBP', models.CharField(blank=True, max_length=25, null=True)),
                ('Blood_pressure_DBP', models.CharField(blank=True, max_length=25, null=True)),
                ('calorie', models.CharField(blank=True, max_length=25, null=True)),
                ('surface_temperature', models.CharField(blank=True, max_length=25, null=True)),
                ('body_temperature', models.CharField(blank=True, max_length=25, null=True)),
                ('heart_rate', models.CharField(blank=True, max_length=25, null=True)),
                ('sos', models.CharField(blank=True, max_length=25, null=True)),
                ('battery', models.CharField(blank=True, max_length=25, null=True)),
                ('beacon_battery', models.CharField(blank=True, max_length=25, null=True)),
                ('Device_name', models.CharField(blank=True, max_length=25, null=True)),
                ('Total', models.CharField(blank=True, max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=50)),
                ('user_name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Users',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='userinfo',
            fields=[
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.DateField(blank=True, max_length=8, null=True)),
                ('trial_enrollment_date', models.DateField(blank=True, max_length=8, null=True)),
                ('age', models.IntegerField()),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('contact_no', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Contact phone number', max_length=128, region=None)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('nominee_name', models.CharField(blank=True, max_length=50, null=True)),
                ('nominee_mobile', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='nominee phone number', max_length=128, region=None)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('country', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('current_clinician', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('clinician_pic', models.ImageField(blank=True, default='', upload_to='images/')),
                ('diagnosis', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('allergies', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('medicine_pic', models.ImageField(blank=True, default='', upload_to='images/')),
                ('dose_duration', models.IntegerField(default=-1)),
                ('dose_per_day', models.IntegerField(default=-1)),
                ('dosage_time1', models.TimeField(blank=True)),
                ('dosage_time2', models.TimeField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('device_id', models.AutoField(primary_key=True, serialize=False)),
                ('medicine_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.medicines')),
                ('patient_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'verbose_name': 'User_profile',
                'verbose_name_plural': 'User_profiles',
            },
        ),
        migrations.CreateModel(
            name='Provisioning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_id', models.CharField(max_length=25)),
                ('public_ip', models.CharField(max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'verbose_name': 'device',
                'verbose_name_plural': 'devices',
            },
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField()),
                ('dispense_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.dispense_log')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
        ),
        migrations.AddField(
            model_name='medicines',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users'),
        ),
        migrations.AddField(
            model_name='dispense_log',
            name='medicine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.medicines'),
        ),
        migrations.CreateModel(
            name='Captureevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('notification_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('home_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('dispense_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('reminder_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('travel_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('contact_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('sideeffect_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('setting_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('coaching_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('dose_schedule_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('reminder_group_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('med_review_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('profile_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('edit_profile_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('default_option_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('my_reminder_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('performance_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('learning_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('community_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('events_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('help_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('msg_template_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('msg_family_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('msg_clinical_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('msg_coherence_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('stop_recording_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('load_medication_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('more_menu_btn', models.DateTimeField(default=datetime.datetime.now)),
                ('device_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'verbose_name': 'Capture_event',
                'verbose_name_plural': 'Capture_events',
            },
        ),
    ]
